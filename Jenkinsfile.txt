pipeline {
    agent any

    environment {
        IMAGE_NAME = 'cinir21/spring-petclinic:latest'
        CONTAINER_NAME = 'spring-petclinic'
        GRAFANA_CONTAINER_NAME = 'grafana'
        PROMETHEUS_IMAGE = 'prom/prometheus:latest'
        GRAFANA_IMAGE = 'grafana/grafana:latest'
    }

    stages {
        stage('Pre-Clean') {
            steps {
                bat '''
                docker run --rm -v "%CD%":/app -w /app maven:3.8.7 chmod -R 777 /app/target
                docker run --rm -v "%CD%":/app -w /app maven:3.8.7 rm -rf /app/target
                '''
            }
        }

        stage('Maven Install') {
            steps {
                bat '''
                    docker run -v "%CD%":/app -w /app maven:3.8.7 mvn clean install -Dcheckstyle.skip=true
                '''
            }
        }

        stage('Scan') {
            steps {
                withSonarQubeEnv('Spring_SonarQube') {
                    bat '''
                    docker run --rm -v "%CD%":/app -w /app maven:3.8.7 mvn sonar:sonar \
                        -Dsonar.projectKey=spring-petclinic \
                        -Dsonar.host.url=http://192.168.1.14:9000 \
                        -Dsonar.login=squ_732874f4be02aa0a0169a6b4a45c4100d409c33e \
                        -Dsonar.java.binaries=target/classes \
                        -Dcheckstyle.skip=true
                    '''
                }
            }
        }

        stage('Docker Build') {
            steps {
                bat 'docker build -t %IMAGE_NAME% .'
            }
        }

        stage('Deploy Application') {
            steps {
                bat '''
                docker stop %CONTAINER_NAME% || echo "No container to stop"
                docker rm %CONTAINER_NAME% || echo "No container to remove"
                docker pull %IMAGE_NAME%
                docker run -d --name %CONTAINER_NAME% -p 8086:8080 %IMAGE_NAME%
                '''
            }
        }
    }

    post {
        always {
            emailext (
                subject: "Jenkins Build ${currentBuild.currentResult}: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: """
                <p>Build Status: ${currentBuild.currentResult}</p>
                <p>Job: ${env.JOB_NAME}</p>
                <p>Build Number: ${env.BUILD_NUMBER}</p>
                <p>URL: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>
                <p>Deployment of ${env.JOB_NAME} is complete.</p>
                """,
                to: "conordawson1409@gmail.com",
                mimeType: 'text/html'
            )
        }
    }
}
